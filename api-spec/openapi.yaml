openapi: 3.0.3
info:
  title: "Adria Concept Title - Adria-12"
  description: "Description of the Adria API - Adria-12"
  version: 0.0.1
servers:
  - url: https://project-2.ti.howest.be/2023-2024/group-12/
    description: "Public API"
  - url: http://localhost:8080/
    description: "Local API"
paths:
  /api/stations:
    get:
      description: Get stations
      operationId: getStations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/station"
  /api/reservations:
    get:
      description: Get reservations
      operationId: getReservations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/reservation"
    post:
      description: Create a reservation
      operationId: createReservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reservationProposal"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reservation"
  /api/tracks:
    get:
      description: Get tracks
      operationId: getTracks
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/track"
  /api/events:
    get:
      description: Search through events
      operationId: searchEvents
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/event"
      parameters:
        - in: query
          name: target
          schema:
            type: integer
          description: Only display events with exact target
          example: 5
        - in: query
          name: earliest
          schema:
            type: integer
            format: int64
          description: Only display events after earliest
          example: 1652434809000
        - in: query
          name: latest
          schema:
            type: integer
            format: int64
          description: Only display events before latest
          example: 1652434809000
        - in: query
          name: subject
          schema:
            type: string
          description: Only display events with exact subject
          example: MOVE
    post:
      description: Push event
      operationId: pushEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/eventProposal"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/event"
  /api/notifications/unread:
    post:
      description: Pop unread notifications
      operationId: popUnreadNotifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                company:
                  type: string
                  example: Macrosoft
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/notification"

components:
  schemas:
    station:
      type: object
      properties:
        name:
          type: string
          example: Adria
        id:
          type: integer
          example: 8
        latitude:
          type: number
          minimum: -90
          maximum: 90
          example: 50.85292760248162
        longitude:
          type: number
          minimum: -90
          maximum: 90
          example: 4.351725442466426
      required:
        - name
        - id
        - latitude
        - longitude
      example:
        name: Adria
        id: 89
        latitude: 50.85292760248162
        longitude: 4.351725442466426
    track:
      type: object
      properties:
        id:
          type: integer
          example: 24
        station1:
          $ref: "#/components/schemas/station"
        station2:
          $ref: "#/components/schemas/station"
    reservation:
      type: object
      properties:
        id:
          type: integer
          example: 5
        company:
          type: string
          example: John
        periodStart:
          type: integer
          format: int64
          example: 1652434809000
        periodStop:
          type: integer
          format: int64
          example: 1652634809000
        route:
          type: array
          items:
            $ref: "#/components/schemas/track"
      required:
        - company
        - periodStart
        - periodStop
        - route
    observable:
      type: object
      properties:
        id:
          type: integer
          example: 2
    event:
      type: object
      properties:
        target:
          $ref: "#/components/schemas/observable"
        moment:
          type: integer
          format: int64
          example: 1652434809000
        subject:
          type: string
          example: MOVE
        reason:
          type: string
          example: Snorlax on track
        latitude:
          type: number
          minimum: -90
          maximum: 90
          example: 20
        longitude:
          type: number
          minimum: -90
          maximum: 90
          example: 5
      required:
        - id
        - target
        - moment
        - subject
    eventProposal:
      type: object
      properties:
        target:
          type: number
          example: 1
        moment:
          type: number
          example: 1652434809000
        subject:
          type: string
          example: MOVE
        reason:
          type: string
          example: Snorlax on track
        latitude:
          type: number
          minimum: -90
          maximum: 90
          example: 20
        longitude:
          type: number
          minimum: -90
          maximum: 90
          example: 5
      required:
        - target
        - moment
        - subject
    reservationProposal:
      type: object
      properties:
        company:
          type: string
          example: John
        periodStart:
          type: integer
          format: int64
          example: 1652434809000
        periodStop:
          type: integer
          format: int64
          example: 1652634809000
        route:
          type: array
          items:
            type: integer
      required:
        - company
        - periodStart
        - periodStop
        - route
    notification:
      type: object
      properties:
        event:
          $ref: "#/components/schemas/event"
        company:
          type: string
          example: Macrosoft
        read:
          type: boolean
          example: false
